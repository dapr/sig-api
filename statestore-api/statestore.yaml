openapi: 3.0.3
info:
  title: Dapr Statestore APIs
  description: |-
    This is the Statestore Dapr Component API specification.
  termsOfService: https://dapr.io/
  contact:
    email: salaboy@diagrid.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Dapr
  url: https://dapr.io/
servers:
  - url: http://localhost:3500/api/
tags:
  - name: state
    description: Statestore APIs
    externalDocs:
      description: Find out more the Statestore API
      url: https://docs.dapr.io/reference/api/state_api/
paths:
  /v1.0/state/{statestore}/{key}:
    get: 
      tags:
        - state
      summary: Get state From Statestore  
      description: Get stored state from the Dapr Statestore Component
      operationId: get-state
      parameters:
        - in: path
          name: statestore
          description: Statestore from where to retrieve data
          required: true
          schema:
            type: string
        - in: path
          required: true
          schema:
            type: string
          name: key
          description: "the key of the desired state"
        - in: "query"
          name: consistency
          description: "read consistency mode"
          schema:
            type: string
            enum: [strong, eventual]
        - in: "query"
          name: metadata
          description: "metadata as query parameters to the state store"
          schema:
            type: object
          style: form
          explode: true
          example: '{ "metadata.partitionKey": "mypartitionKey" }'    
      responses:
        "200": 
          description: "State retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateGetResponse"
        "204":
          description: "State Key is not found"
        "400":
          description: "State store is missing or misconfigured"
        "500":
          description: "An error occurred, check the Dapr logs"
    delete: 
      tags: 
      - state
      summary: Delete state from the Statestore
      description: Delete state from teh Dapr Statestore Component
      operationId: delete-state
      parameters:
      - in: "path"
        required: true
        schema:
          type: string
        name: statestore
        description: metadata.name field in the user configured state store component yaml. Please refer Dapr State Store configuration structure mentioned above.
      - in: "path"
        required: true
        schema:
          type: string
        name: key
        description: "the key of the desired state"
      responses:
        "204":
          description: "Deleted Key successfully"
        "400":
          description: "State store is missing or misconfigured"
        "500":
          description: "An error occurred, check the Dapr logs"              
  /v1.0/state/{statestore}:
    post: 
      tags:
        - state
      summary: Store state to the Statestore
      description: Store state to the Dapr Statestore Component
      operationId: post-store-state
      parameters:
      - in: path
        name: statestore
        description: Statestore from where to retrieve data
        required: true
        schema:
          type: string
      requestBody: 
        description: Values to store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StateRequestArray"
      responses:
        '204':
          description: "State saved"
        '400':
          description: "State store is missing or misconfigured"
        '500':
          description: "An error occurred, check the Dapr logs"
    put: 
      tags:
        - state
      summary: Store state to the Statestore
      description: Store state to the Dapr Statestore Component
      operationId: put-store-state
      parameters:
      - in: path
        name: statestore
        description: Statestore from where to retrieve data
        required: true
        schema:
          type: string
      requestBody: 
        description: Values to store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StateRequestArray"
      responses:
        '204':
          description: "State saved"
        '400':
          description: "State store is missing or misconfigured"
        '500':
          description: "An error occurred, check the Dapr logs"      
  /v1.0/state/{statestore}/bulk:
    post: 
      tags:
        - state
      summary: Get Bulk state from the Statestore
      description: This endpoint lets you get a list of values for a given list of keys.
      operationId: post-bulk-get-state
      parameters:
      - in: path
        name: statestore
        description: Statestore from where to retrieve data
        required: true
        schema:
          type: string
      requestBody: 
        description: Values to store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkStateRequest" 
      responses:
        "200": 
          description: "State retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateGetResponse"
        "204":
          description: "State Key is not found"
        "400":
          description: "State store is missing or misconfigured"
        "500":
          description: "An error occurred, check the Dapr logs"
    put: 
      tags:
        - state
      summary: Get Bulk state from the Statestore
      description: This endpoint lets you get a list of values for a given list of keys.
      operationId: put-bulk-get-state
      parameters:
      - in: path
        name: statestore
        description: Statestore from where to retrieve data
        required: true
        schema:
          type: string
      requestBody: 
        description: Values to store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkStateRequest" 
      responses:
        "200": 
          description: "State retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StateGetResponse"
        "204":
          description: "State Key is not found"
        "400":
          description: "State store is missing or misconfigured"
        "500":
          description: "An error occurred, check the Dapr logs"
  # /v1.0/state/{statestore}/transaction:
  #   post: 
  #     tags:
  #       - state
  #     summary: Set state to the Statestore as a transactional operation
  #     description: Persists the changes to the state store as a transactional operation. 
  #     operationId: post-transaction-set-state
  #     parameters:
  #     - in: path
  #       name: statestore
  #       description: Statestore from where to retrieve data
  #       required: true
  #       schema:
  #         type: string
  #     requestBody: 
  #       description: Values to store
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/TransactionalOperationsRequest" 
  #     responses:
  #       "200": 
  #         description: "State retrieved successfully"
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/StateGetResponse"
  #       "204":
  #         description: "State Key is not found"
  #       "400":
  #         description: "State store is missing or misconfigured"
  #       "500":
  #         description: "An error occurred, check the Dapr logs"
  #   put: 
  #     tags:
  #       - state
  #     summary: Set state to the Statestore as a transactional operation
  #     description: Persists the changes to the state store as a transactional operation. 
  #     operationId: put-transaction-set-state
  #     parameters:
  #     - in: path
  #       name: statestore
  #       description: Statestore from where to retrieve data
  #       required: true
  #       schema:
  #         type: string
  #     requestBody: 
  #       description: Values to store
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/TransactionalOperationsRequest" 
  #     responses:
  #       "200": 
  #         description: "State retrieved successfully"
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/StateGetResponse"
  #       "204":
  #         description: "State Key is not found"
  #       "400":
  #         description: "State store is missing or misconfigured"
  #       "500":
  #         description: "An error occurred, check the Dapr logs"
components:
  schemas:
    StateRequest:
      type: "object"
      required:
        - key
        - value
      properties:
        key:
          type: "string"
          description: "state key"
        value:
          type: "string"
          description: "state value, which can be any byte array"
        # etag:
        #   description: "state ETag"
        #   type: "string"
        # metadata:
        #   description: "additional key-value pairs to be passed to the state store"
        #   type: "object"
        # options:
        #   description: "state operation options, see state operation options"
        #   type: "string"
      
    StateRequestArray:
      type: "array"
      items:
        $ref: "#/components/schemas/StateRequest"
    StateGetResponse:
      type: "object"
    BulkStateRequest:
      type: "object"
      required: 
      - keys
      properties: 
        keys: 
          type: "array"
          description: "keys to fetch"
    TransactionalOperationsRequest:
      type: "array"
      items:
        $ref: "#/components/schemas/TransactionalOperationRequest"      
    TransactionalOperationRequest:
      type: "object"
